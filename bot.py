from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ForceReply
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, MessageHandler, ContextTypes, filters

BOT_TOKEN = '7598024378:AAEgqjxKFrgw1tLYUzs1EQKUC8HDr9Zu8Zc'
ADMIN_CHAT_ID = 6081258504

questionnaires = {
    '–í–ü': """1. –ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è? (–∏–º—è –∏–ª–∏ –Ω–∏–∫)
2. –ö–∞–∫–∏–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ?
3. –ö–∞–∫–æ–π —É –≤–∞—Å —ç–º–æ–¥–∑–∏? (–ø—Ä–µ–º–∏—É–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç—Å—è)
4. –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ –æ–±—â–µ–Ω–∏–µ –Ω–∞ "—Ç—ã" –∏–ª–∏ –Ω–∞ "–≤—ã"?
5. –ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –æ–ø—ã—Ç –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤, –≤–∑–∞–∏–º–æ–ø–∏–∞—Ä–∞ –∏ —Ä–µ–∫–ª–∞–º—ã? –û–ø–∏—à–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ.
6. –ö–∞–∫ –≤—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏?
7. –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –∑–Ω–∞–∫–æ–º—ã —Å –†–µ–≥—Ä–µ—Ç–µ–≤–∞—Ç–æ—Ä–æ–º?
8. –ù–∞—Å–∫–æ–ª—å–∫–æ –≤—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω—ã –≤ –æ–±—â–µ–Ω–∏–∏?
9. –°—Ç–æ–∏—Ç –ª–∏ —É—á–∏—Ç—ã–≤–∞—Ç—å –æ—Å–æ–±—ã–µ —Ñ–æ—Ä–º—ã –æ–±—Ä–∞—â–µ–Ω–∏—è (—Ç–æ–Ω-—Ç–µ–≥–∏, —Ñ–µ–º–∏–Ω–∏—Ç–∏–≤—ã, –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∏ —Ç.–ø.)?""",
    '–•–µ–ª–ø–µ—Ä': """1. –ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è? (–∏–º—è –∏–ª–∏ –Ω–∏–∫)
2. –ö–∞–∫–∏–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ?
3. –ö–∞–∫–æ–π —É –≤–∞—Å —ç–º–æ–¥–∑–∏? (–ø—Ä–µ–º–∏—É–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç—Å—è)
4. –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ –æ–±—â–µ–Ω–∏–µ –Ω–∞ "—Ç—ã" –∏–ª–∏ –Ω–∞ "–≤—ã"?
5. –ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –æ–ø—ã—Ç —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≥–∞–π–¥–æ–≤, —É—á–∞—Å—Ç–∏—è –≤ –∏–≤–µ–Ω—Ç–∞—Ö, —Å–±–æ—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ —Ç.–ø.? –ï—Å–ª–∏ –¥–∞, –æ–ø–∏—à–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ.
6. –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –∑–Ω–∞–∫–æ–º—ã —Å –†–µ–≥—Ä–µ—Ç–µ–≤–∞—Ç–æ—Ä–æ–º?
7. –ù–∞—Å–∫–æ–ª—å–∫–æ –≤—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω—ã –≤ –æ–±—â–µ–Ω–∏–∏?
8. –°—Ç–æ–∏—Ç –ª–∏ —É—á–∏—Ç—ã–≤–∞—Ç—å –æ—Å–æ–±—ã–µ —Ñ–æ—Ä–º—ã –æ–±—Ä–∞—â–µ–Ω–∏—è (—Ç–æ–Ω-—Ç–µ–≥–∏, —Ñ–µ–º–∏–Ω–∏—Ç–∏–≤—ã, –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∏ —Ç.–ø.)?""",
    '–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫': """1. –ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è? (–∏–º—è –∏–ª–∏ –Ω–∏–∫)
2. –ö–∞–∫–∏–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ?
3. –ö–∞–∫–æ–π —É –≤–∞—Å —ç–º–æ–¥–∑–∏? (–ø—Ä–µ–º–∏—É–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç—Å—è)
4. –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ –æ–±—â–µ–Ω–∏–µ –Ω–∞ "—Ç—ã" –∏–ª–∏ –Ω–∞ "–≤—ã"?
5. –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏?
6. –ö–∞–∫ –±—ã –≤—ã –æ—Ü–µ–Ω–∏–ª–∏ —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ? (–º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø–æ —à–∫–∞–ª–µ A1‚ÄìC2 –∏–ª–∏ –æ–ø–∏—Å–∞—Ç–µ–ª—å–Ω–æ)
7. –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –∑–Ω–∞–∫–æ–º—ã —Å –†–µ–≥—Ä–µ—Ç–µ–≤–∞—Ç–æ—Ä–æ–º?
8. –ù–∞—Å–∫–æ–ª—å–∫–æ –≤—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω—ã –≤ –æ–±—â–µ–Ω–∏–∏?
9. –°—Ç–æ–∏—Ç –ª–∏ —É—á–∏—Ç—ã–≤–∞—Ç—å –æ—Å–æ–±—ã–µ —Ñ–æ—Ä–º—ã –æ–±—Ä–∞—â–µ–Ω–∏—è (—Ç–æ–Ω-—Ç–µ–≥–∏, —Ñ–µ–º–∏–Ω–∏—Ç–∏–≤—ã, –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∏ —Ç.–ø.)?""",
    '–†–µ–¥–∞–∫—Ç–æ—Ä': """1. –ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è? (–∏–º—è –∏–ª–∏ –Ω–∏–∫)
2. –ö–∞–∫–∏–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ?
3. –ö–∞–∫–æ–π —É –≤–∞—Å —ç–º–æ–¥–∑–∏? (–ø—Ä–µ–º–∏—É–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç—Å—è)
4. –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ –æ–±—â–µ–Ω–∏–µ –Ω–∞ "—Ç—ã" –∏–ª–∏ –Ω–∞ "–≤—ã"?
5. –ò–º–µ–µ—Ç–µ –ª–∏ –æ–ø—ã—Ç –≤ —Ä–µ–¥–∞–∫—Ç—É—Ä–µ —Ç–µ–∫—Å—Ç–æ–≤? –ö–∞–∫ –¥–∞–≤–Ω–æ —ç—Ç–∏–º –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å?
6. –ó–Ω–∞–µ—Ç–µ –ª–∏ –≤—ã –∞–Ω–≥–ª–∏–π—Å–∫–∏–π? –ï—Å–ª–∏ –¥–∞, –∫–∞–∫–æ–π —É –≤–∞—Å —É—Ä–æ–≤–µ–Ω—å?
7. –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –∑–Ω–∞–∫–æ–º—ã —Å –†–µ–≥—Ä–µ—Ç–µ–≤–∞—Ç–æ—Ä–æ–º?
8. –ù–∞—Å–∫–æ–ª—å–∫–æ –≤—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç–Ω—ã –≤ –æ–±—â–µ–Ω–∏–∏?
9. –°—Ç–æ–∏—Ç –ª–∏ —É—á–∏—Ç—ã–≤–∞—Ç—å –æ—Å–æ–±—ã–µ —Ñ–æ—Ä–º—ã –æ–±—Ä–∞—â–µ–Ω–∏—è (—Ç–æ–Ω-—Ç–µ–≥–∏, —Ñ–µ–º–∏–Ω–∏—Ç–∏–≤—ã, –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∏ —Ç.–ø.)?""",
    '–°–º–µ—à–∞–Ω–Ω–æ–µ': "–£–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∑–∞–Ω—è—Ç—å, –∏ –¥–æ–∂–¥–∏—Ç–µ—Å—å —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –∞–Ω–∫–µ—Ç—ã."
}

user_roles = {}

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("–í–ü", callback_data='–í–ü')],
        [InlineKeyboardButton("–•–µ–ª–ø–µ—Ä", callback_data='–•–µ–ª–ø–µ—Ä')],
        [InlineKeyboardButton("–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫", callback_data='–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫')],
        [InlineKeyboardButton("–†–µ–¥–∞–∫—Ç–æ—Ä", callback_data='–†–µ–¥–∞–∫—Ç–æ—Ä')],
        [InlineKeyboardButton("–°–º–µ—à–∞–Ω–Ω–æ–µ", callback_data='–°–º–µ—à–∞–Ω–Ω–æ–µ')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ù–∞ –∫–∞–∫—É—é –¥–æ–ª–∂–Ω–æ—Å—Ç—å –≤—ã –ø—Ä–µ—Ç–µ–Ω–¥—É–µ—Ç–µ?", reply_markup=reply_markup)

# –∫–Ω–æ–ø–∫–∏
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    role = query.data
    user_id = query.from_user.id
    user_roles[user_id] = role
    questionnaire = questionnaires.get(role, "–ê–Ω–∫–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    await query.message.reply_text(questionnaire, reply_markup=ForceReply())

# –∞–Ω–∫–µ—Ç—ã
async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    role = user_roles.get(user_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
    user_name = update.message.from_user.full_name
    user_response = update.message.text

    if role == "–°–º–µ—à–∞–Ω–Ω–æ–µ":
        report = f"üì• –ê–Ω–∫–µ—Ç–∞ ¬´–°–º–µ—à–∞–Ω–Ω–æ–µ¬ª –æ—Ç {user_name} (@{update.message.from_user.username}):\n\n" \
                 f"üß© –ñ–µ–ª–∞–Ω–Ω—ã–µ —Ä–æ–ª–∏:\n{user_response}"
        await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=report)
    else:
        report = f"üì• –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –æ—Ç {user_name} (@{update.message.from_user.username}):\n\n" \
                 f"üß© –î–æ–ª–∂–Ω–æ—Å—Ç—å: {role}\n" \
                 f"üìù –û—Ç–≤–µ—Ç—ã:\n{user_response}"

        keyboard = [
            [
                InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"accept_{user_id}"),
                InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{user_id}")
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=report, reply_markup=reply_markup)

    await update.message.reply_text("–û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞. –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –∑–∞–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 24 —á–∞—Å–∞, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ.")

# –¥–ª—è –∞–¥–º–∏–Ω–∞ ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ reply
async def admin_reply_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.reply_to_message:
        original_text = update.message.reply_to_message.text
        lines = original_text.split('\n')
        for line in lines:
            if line.startswith("üì• –ê–Ω–∫–µ—Ç–∞ ¬´–°–º–µ—à–∞–Ω–Ω–æ–µ¬ª –æ—Ç") or line.startswith("üì• –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –æ—Ç"):
                username = line.split('@')[-1].rstrip('):')
                try:
                    await context.bot.send_message(chat_id=f"@{username}", text=update.message.text)
                    await update.message.reply_text("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
                except Exception as e:
                    await update.message.reply_text(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
                break

# –Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ ‚Äî –ø—Ä–∏–Ω—è—Ç–∏–µ/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ
async def admin_button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    data = query.data
    action, user_id_str = data.split('_')
    user_id = int(user_id_str)

    try:
        if action == "accept":
            await context.bot.send_message(chat_id=user_id, text="–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –ø—Ä–∏–Ω—è—Ç–∞. –í–∞–º —Å–∫–æ—Ä–æ –Ω–∞–ø–∏—à—É—Ç.")
        elif action == "reject":
            await context.bot.send_message(chat_id=user_id, text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.")

        original_text = query.message.text
        if "‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é." not in original_text:
            updated_text = original_text + "\n\n‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."
            await query.edit_message_text(updated_text, reply_markup=query.message.reply_markup)

    except Exception as e:
        await query.message.reply_text(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")

# –∑–∞–ø—É—Å–∫
if __name__ == '__main__':
    try:
        app = ApplicationBuilder().token(BOT_TOKEN).build()

        app.add_handler(CommandHandler("start", start))
        app.add_handler(CallbackQueryHandler(button_handler, pattern="^(–í–ü|–•–µ–ª–ø–µ—Ä|–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫|–†–µ–¥–∞–∫—Ç–æ—Ä|–°–º–µ—à–∞–Ω–Ω–æ–µ)$"))
        app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), message_handler))
        app.add_handler(MessageHandler(filters.TEXT & filters.REPLY, admin_reply_handler))
        app.add_handler(CallbackQueryHandler(admin_button_handler, pattern=r"^(accept|reject)_\d+$"))

        print("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω! –û–∂–∏–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        app.run_polling()

    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
